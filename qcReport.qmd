---
title: "QC Report"
format: html
editor: visual
execute:
  keep-md: true
---

```{r}
library(safetyData)
library(diffdf)
library(tibble)
library(stringr)
```


```{r data_load}
input_dataset_paths <- list.files("pilot5-submission/pilot5-input/adamdata")
input_dataset_paths <- input_dataset_paths[endsWith(input_dataset_paths, ".rds") ]
input_dataset_names <- tools::file_path_sans_ext(input_dataset_paths)

for (i in seq_along(input_dataset_names)) {
  assign(
    paste0("new_", input_dataset_names[i]), 
    readRDS(paste0("pilot5-submission/pilot5-input/adamdata/", input_dataset_paths[i]))
    )
}
dataset_map <- tribble(
  ~comp_dataset, ~new_dataset,
  "safetyData::adam_adqsadas", "new_adadas",
  "safetyData::adam_adae", "new_adae",
  "safetyData::adam_adlbc", "new_adlbc",
  "safetyData::adam_adsl", "new_adsl",
)

```
```{r data_html}


#| echo: false
#| output: false
sink("qc.Rmd")
for (y in input_dataset_names) {
  cat("<details>\n")
  
  cat(str_glue("<summary>Dataset: {y}</summary>\n\n"))
  
  new_dataset <- paste0("new_", y)
  comp_dataset <- dataset_map[dataset_map$new_dataset == new_dataset, "comp_dataset"]
  print(diffdf(get(new_dataset), comp_dataset))
  
  
  cat("</details>")
   cat("\n\n")
}
sink()
```

```{r data_check}
#| warning: false
#| message: false
#| echo: false
#| output: asis
readLines("qc.Rmd") |>
  cat(sep = "\n")
```